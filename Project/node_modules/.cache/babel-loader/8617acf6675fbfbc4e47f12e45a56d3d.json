{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router';\nexport default {\n  name: \"listeacte\",\n  data: () => ({\n    created_at: '',\n    scope: '',\n    msgAlert: '',\n    stateaccount: '',\n    headerActes: [{\n      text: 'id',\n      align: 'start',\n      sortable: true,\n      value: 'idActe'\n    }, {\n      text: 'Nom',\n      value: 'nom'\n    }, {\n      text: 'Prénom',\n      value: 'postnom'\n    }, {\n      text: 'Prénom',\n      value: 'prenom'\n    }, {\n      text: 'email',\n      value: 'email'\n    }, {\n      text: 'Date de creattion',\n      value: 'created_at'\n    }, {\n      text: 'actions',\n      value: 'actions'\n    }],\n    headerActesData: []\n  }),\n  methods: {\n    findIdMerchandise() {\n      this.prop_merchandises.forEach(element => {\n        if (element.title == this.title_merchandise) {\n          this.id_merchandise = element.id;\n        }\n      });\n    },\n\n    changetypefonction(type) {\n      this.typeAlert = '';\n      this.msgAlert = '';\n    },\n\n    async editMethod() {\n      this.changetypefonction('');\n\n      if (String(this.password).length < 8 || String(this.newpassword).length < 8) {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Le mot de passe doit contenir au minimum 8 caractères\";\n        return;\n      }\n\n      if (this.scope == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Veuillez choisir d'abord le type d'utilisateur\";\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append('id', this.idUser);\n        formData.append('firstname', this.firstname);\n        formData.append('lastname', this.lastname);\n        formData.append('password', this.password);\n        formData.append('password_confirm', this.password);\n        formData.append('email', this.email);\n        formData.append('new_email', this.email);\n        formData.append('scope', this.scope);\n        formData.append('stateaccount', this.stateaccount);\n        const response = await axios.post('user/editAccountUser', formData);\n\n        if (response.data.errorstate == true) {\n          this.typeAlert = 'error';\n          this.msgAlert = response.data.error;\n          console.log(response.data.error);\n          return;\n        }\n\n        this.msgAlert = 'Compte modifié avec succés';\n        this.typeAlert = 'info';\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async getUserInfo(id) {\n      let paramId = router.currentRoute.params.id;\n\n      if (paramId != null) {\n        const response = await axios.post('user/getInfoByid/' + paramId);\n        this.idUser = response.data.id;\n        this.firstname = response.data.firstname;\n        this.lastname = response.data.lastname;\n        this.email = response.data.email;\n        this.scope = response.data.scope;\n        this.stateaccount = response.data.stateaccount;\n      }\n    }\n\n  },\n\n  beforeMount() {\n    this.getUserInfo();\n  }\n\n};","map":{"version":3,"mappings":"AAwBA;AACA;AACA;EACAA,iBADA;EAEAC;IACAC,cADA;IAEAC,SAFA;IAGAC,YAHA;IAIAC,gBAJA;IAKAC,cACA;MACAC,UADA;MAEAC,cAFA;MAGAC,cAHA;MAIAC;IAJA,CADA,EAOA;MAAAH;MAAAG;IAAA,CAPA,EAQA;MAAAH;MAAAG;IAAA,CARA,EASA;MAAAH;MAAAG;IAAA,CATA,EAUA;MAAAH;MAAAG;IAAA,CAVA,EAWA;MAAAH;MAAAG;IAAA,CAXA,EAYA;MAAAH;MAAAG;IAAA,CAZA,CALA;IAmBAC;EAnBA,EAFA;EAuBAC;IACAC;MACA;QACA;UACA;QACA;MACA,CAJA;IAKA,CAPA;;IAQAC;MACA;MACA;IACA,CAXA;;IAYA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACAC;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACA;;QACA;UACA;UACA;UACAC;UACA;QACA;;QACA;QACA;MACA,CApBA,CAoBA;QACAA;MACA;IACA,CA/CA;;IAgDA;MACA;;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IAEA;;EA5DA,CAvBA;;EAqFAC;IACA;EACA;;AAvFA","names":["name","data","created_at","scope","msgAlert","stateaccount","headerActes","text","align","sortable","value","headerActesData","methods","findIdMerchandise","changetypefonction","formData","console","beforeMount"],"sourceRoot":"src/views/admin","sources":["listeacte.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<v-subheader class=\"d-flex justify-space-between align-center\">\r\n\t\t\t<h3>Listes des actes</h3>\r\n\t\t</v-subheader>\r\n\t\t<v-alert dense type=\"info\" color=\"#757575\">\r\n\t\t\tCette partie contient tous les actes de naissance dejà enregistré par l'agent \r\n\t\t</v-alert> \r\n\t\t<v-data-table :headers=\"headerActes\" :items=\"headerActesData\" :items-per-page=\"5\" class=\"elevation-1\">\r\n\t\t\t<template v-slot:item.actions=\"{ item }\" class=\"d-flex justify-space-between align-center\">\r\n\t\t\t\t<v-btn x-small class=\"btnAction\" color=\"info\" link :to=\"{ name: 'editaccount', params: { id: item.id } }\">\r\n\t\t\t\t\t<v-icon x-small color=\"purple\"> mdi-pencil\r\n\t\t\t\t\t</v-icon>\r\n\t\t\t\t</v-btn>\r\n\t\t\t\t<v-btn x-small color @click=\"deleteUser(item);\">\r\n\t\t\t\t\t<v-icon x-small color=\"error\"> mdi-delete\r\n\t\t\t\t\t</v-icon>\r\n\t\t\t\t</v-btn>\r\n\t\t\t</template>\r\n\t\t</v-data-table>\r\n\t</div>\r\n</template> \r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport router from '@/router';\r\nexport default {\r\n\tname: \"listeacte\",\r\n\tdata: () => ({\r\n\t\tcreated_at: '',\r\n\t\tscope: '',\r\n\t\tmsgAlert: '',\r\n\t\tstateaccount: '',\r\n\t\theaderActes: [\r\n\t\t\t{\r\n\t\t\t\ttext: 'id',\r\n\t\t\t\talign: 'start',\r\n\t\t\t\tsortable: true,\r\n\t\t\t\tvalue: 'idActe',\r\n\t\t\t},\r\n\t\t\t{ text: 'Nom', value: 'nom' },\r\n\t\t\t{ text: 'Prénom', value: 'postnom' },\r\n\t\t\t{ text: 'Prénom', value: 'prenom' },\r\n\t\t\t{ text: 'email', value: 'email' },\r\n\t\t\t{ text: 'Date de creattion', value: 'created_at' },\r\n\t\t\t{ text: 'actions', value: 'actions' },\r\n\t\t],\r\n\t\theaderActesData: [],\r\n\t}),\r\n\tmethods: {\r\n\t\tfindIdMerchandise() {\r\n\t\t\tthis.prop_merchandises.forEach(element => {\r\n\t\t\t\tif (element.title == this.title_merchandise) {\r\n\t\t\t\t\tthis.id_merchandise = element.id\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tchangetypefonction(type) {\r\n\t\t\tthis.typeAlert = ''\r\n\t\t\tthis.msgAlert = ''\r\n\t\t},\r\n\t\tasync editMethod() {\r\n\t\t\tthis.changetypefonction('')\r\n\t\t\tif (((String(this.password).length) < 8) || ((String(this.newpassword).length) < 8)) {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Le mot de passe doit contenir au minimum 8 caractères\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (this.scope == '') {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Veuillez choisir d'abord le type d'utilisateur\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst formData = new FormData()\r\n\t\t\t\tformData.append('id', this.idUser)\r\n\t\t\t\tformData.append('firstname', this.firstname)\r\n\t\t\t\tformData.append('lastname', this.lastname)\r\n\t\t\t\tformData.append('password', this.password)\r\n\t\t\t\tformData.append('password_confirm', this.password)\r\n\t\t\t\tformData.append('email', this.email)\r\n\t\t\t\tformData.append('new_email', this.email)\r\n\t\t\t\tformData.append('scope', this.scope)\r\n\t\t\t\tformData.append('stateaccount', this.stateaccount)\r\n\t\t\t\tconst response = await axios.post('user/editAccountUser', formData)\r\n\t\t\t\tif ((response.data.errorstate) == true) {\r\n\t\t\t\t\tthis.typeAlert = 'error'\r\n\t\t\t\t\tthis.msgAlert = response.data.error\r\n\t\t\t\t\tconsole.log(response.data.error)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.msgAlert = 'Compte modifié avec succés'\r\n\t\t\t\tthis.typeAlert = 'info'\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getUserInfo(id) {\r\n\t\t\tlet paramId = router.currentRoute.params.id\r\n\t\t\tif (paramId != null) {\r\n\t\t\t\tconst response = await axios.post('user/getInfoByid/' + paramId)\r\n\t\t\t\tthis.idUser = response.data.id\r\n\t\t\t\tthis.firstname = response.data.firstname\r\n\t\t\t\tthis.lastname = response.data.lastname\r\n\t\t\t\tthis.email = response.data.email\r\n\t\t\t\tthis.scope = response.data.scope\r\n\t\t\t\tthis.stateaccount = response.data.stateaccount\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t},\r\n\tbeforeMount() {\r\n\t\tthis.getUserInfo()\r\n\t},\r\n}\r\n</script>\r\n<style scoped>\r\nh5 {\r\n\tcolor: rgb(70, 64, 64);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}