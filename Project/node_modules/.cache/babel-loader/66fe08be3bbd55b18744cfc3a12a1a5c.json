{"ast":null,"code":"import { mapState } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: \"listeacte\",\n  computed: mapState(['userInfo']),\n  data: () => ({\n    messsage: '',\n    kind: '',\n    receiverEmail: '',\n    idReceiver: '',\n    users: [],\n    typeAlert: '',\n    msgAlert: ''\n  }),\n  methods: {\n    async getUser() {\n      this.msgAlert = '';\n      this.typeAlert = '';\n\n      try {\n        const response = await axios.post('messages/usersMsg/' + this.receiverEmail, formData);\n        if (response.data.id != '') this.idReceiver = response.data.id;else {\n          this.typeAlert = 'error';\n          this.msgAlert = \"L'adresse mail est introuvable dans le système\";\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async envoyerMessage() {\n      try {\n        if (this.idReceiver != '') {\n          const formData = new FormData();\n          formData.append('id', this.idUser);\n          formData.append('message', this.message);\n          formData.append('writer', this.userInfo.id);\n          formData.append('receiver', this.idReceiver);\n          formData.append('kind', this.kind);\n          const response = await axios.post('messages/usersMsg/' + this.idReceiver, formData);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA;AACA;AACA;EACAA,iBADA;EAEAC,oBACA,UADA,EAFA;EAKAC;IACAC,YADA;IAEAC,QAFA;IAGAC,iBAHA;IAIAC,cAJA;IAKAC,SALA;IAMAC,aANA;IAOAC;EAPA,EALA;EAcAC;IACA;MACA;MACA;;MACA;QACA;QACA,4BACA,mCADA,KAEA;UACA;UACA;QACA;MACA,CARA,CAQA;QACAC;MACA;IACA,CAfA;;IAgBA;MACA;QACA;UACA;UACAC;UACAA;UACAA;UACAA;UACAA;UACA;QACA;MAEA,CAXA,CAWA;QACAD;MACA;IACA;;EA/BA;AAdA","names":["name","computed","data","messsage","kind","receiverEmail","idReceiver","users","typeAlert","msgAlert","methods","console","formData"],"sourceRoot":"src/views/messages","sources":["newmessage.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<v-subheader>\r\n\t\t\t<h3>Nouveau message</h3>\r\n\t\t</v-subheader>\r\n\t\t<v-card>\r\n\t\t\t<h6>Expéditeur : {{ userInfo.email }}</h6>\r\n\t\t</v-card>\r\n\t\t<form @submit.prevent=\"envoyerMessage()\" method=\"post\">\r\n\r\n\t\t\t<v-card>\r\n\t\t\t\t<v-card-title class=\"text-h5\">\r\n\t\t\t\t\t<v-text-field v-model=\"receiverEmail\" label=\"email Destinaire\" width=\"50%\"></v-text-field>\r\n\t\t\t\t</v-card-title>\r\n\t\t\t\t<v-card-text>\r\n\t\t\t\t\t<v-text-field v-model=\"messsage\" label=\"Contenu\" name=\"name\" textarea></v-text-field>\r\n\t\t\t\t</v-card-text> \r\n\t\t\t\t<v-checkbox label=\"Envoyer à tous\" v-model=\"kind\" value=\"O\"/> </v-checkbox>\r\n\t\t\t\t<v-alert :type=\"typeAlert\" v-if=\"msgAlert\" class=\"mb-4\">\r\n\t\t\t\t\t{{ msgAlert }}\r\n\t\t\t\t</v-alert>\r\n\t\t\t</v-card>\r\n\t\t\t<v-btn type=\"submit\" class=\"mt-2\" @click=\"getUser()\">\r\n\t\t\t\tEnvoyer\r\n\t\t\t</v-btn>\r\n\t\t</form>\r\n\t</div>\r\n</template> \r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport axios from 'axios'\r\nexport default {\r\n\tname: \"listeacte\",\r\n\tcomputed: mapState([\r\n\t\t'userInfo',\r\n\t]),\r\n\tdata: () => ({\r\n\t\tmesssage: '',\r\n\t\tkind: '',\r\n\t\treceiverEmail: '',\r\n\t\tidReceiver: '',\r\n\t\tusers: [],\r\n\t\ttypeAlert: '',\r\n\t\tmsgAlert: ''\r\n\t}),\r\n\tmethods: {\r\n\t\tasync getUser() {\r\n\t\t\tthis.msgAlert = ''\r\n\t\t\tthis.typeAlert = ''\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post('messages/usersMsg/' + this.receiverEmail, formData)\r\n\t\t\t\tif (response.data.id != '')\r\n\t\t\t\t\tthis.idReceiver = response.data.id\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.typeAlert = 'error'\r\n\t\t\t\t\tthis.msgAlert = \"L'adresse mail est introuvable dans le système\"\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync envoyerMessage() {\r\n\t\t\ttry {\r\n\t\t\t\tif (this.idReceiver != '') {\r\n\t\t\t\t\tconst formData = new FormData()\r\n\t\t\t\t\tformData.append('id', this.idUser)\r\n\t\t\t\t\tformData.append('message', this.message)\r\n\t\t\t\t\tformData.append('writer', this.userInfo.id)\r\n\t\t\t\t\tformData.append('receiver', this.idReceiver)\r\n\t\t\t\t\tformData.append('kind', this.kind)\r\n\t\t\t\t\tconst response = await axios.post('messages/usersMsg/' + this.idReceiver, formData)\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}