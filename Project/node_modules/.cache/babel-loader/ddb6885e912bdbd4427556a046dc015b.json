{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"newacte\",\n  data: () => ({\n    idActe: \"\",\n    nom: \"\",\n    postnom: \"\",\n    prenom: \"\",\n    sexe: \"\",\n    dateNaissance: \"\",\n    lieuNaissance: \"\",\n    nationalite: \"\",\n    nomPere: \"\",\n    nomMere: \"\",\n    province: \"\",\n    ville: \"\",\n    origine: \"\",\n    commune: \"\",\n    territoire: \"\",\n    quartier: \"\",\n    avenue: \"\",\n    numero: \"\",\n    dateEnregistrement: \"\",\n    idDeclarant: \"\",\n    idUser: '',\n    itemsEtatCivil: [{\n      scope: 'marie',\n      title: 'Marié'\n    }, {\n      scope: 'celibat',\n      title: 'Celibataire'\n    }],\n    itemsSexe: [{\n      scope: 'masculin',\n      title: 'Masculin'\n    }, {\n      scope: 'feminin',\n      title: 'Féminin'\n    }],\n    msgAlert: '',\n    itemsDeclarant: ''\n  }),\n  methods: {\n    changetypefonction() {\n      this.typeAlert = '';\n      this.msgAlert = '';\n    },\n\n    initializeFields() {\n      this.firstname = '';\n      this.lastname = '';\n      this.email = '';\n      this.password = '';\n      this.created_at = '';\n      this.scope = '';\n      this.professsion = '';\n      this.bornin = '';\n      this.eta_civil = '';\n      this.sexe = '';\n      this.residence = '';\n    },\n\n    async addMethod() {\n      this.changetypefonction();\n\n      if (String(this.password).length < 8 || String(this.newpassword).length < 8) {\n        this.typeAlert = \"error\";\n        this.msgAlert = \" Le mot de passe doit contenir au minimum 8 caractères !\";\n        return;\n      }\n\n      if (this.sexe == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Veuillez choisir le genre !\";\n        return;\n      }\n\n      if (this.firstname == '' || this.lastname == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Tous les noms sont pas complets !\";\n        return;\n      }\n\n      if (this.eta_civil == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Veuillez choisir l'etat civil svp!\";\n        return;\n      }\n\n      if (this.bornin == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Veuillez entrer une date de naissance svp!\";\n      }\n\n      if (this.professsion == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Veuillez definir la professsion!\";\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append('firstname', this.firstname);\n        formData.append('lastname', this.lastname);\n        formData.append('password', this.password);\n        formData.append('password_confirm', this.password);\n        formData.append('email', this.email);\n        formData.append('scope', \"decl\");\n        formData.append('professsion', this.professsion);\n        formData.append('residence', this.residence);\n        formData.append('etat_civil', this.eta_civil);\n        formData.append('sexe', this.sexe);\n        formData.append('bornin', this.bornin);\n        const response = await axios.post('user/register', formData);\n\n        if (response.data.errorstate == true) {\n          this.typeAlert = 'error';\n          this.msgAlert = response.data.error;\n          console.log(response.data.error);\n          return;\n        }\n\n        this.msgAlert = 'Acte de naissance enregistré avec succés';\n        this.typeAlert = 'success';\n        this.initializeFields();\n      } catch (e) {}\n    },\n\n    async getAllDeclarant() {\n      try {\n        const response = await axios.post(\"user/getDeclarant\");\n        this.itemsDeclarant = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  },\n\n  beforeMount() {\n    this.getAllDeclarant();\n  }\n\n};","map":{"version":3,"mappings":"AAsEA;AACA;EACAA,eADA;EAEAC;IACAC,UADA;IAEAC,OAFA;IAGAC,WAHA;IAIAC,UAJA;IAKAC,QALA;IAMAC,iBANA;IAOAC,iBAPA;IAQAC,eARA;IASAC,WATA;IAUAC,WAVA;IAWAC,YAXA;IAYAC,SAZA;IAaAC,WAbA;IAcAC,WAdA;IAeAC,cAfA;IAgBAC,YAhBA;IAiBAC,UAjBA;IAkBAC,UAlBA;IAmBAC,sBAnBA;IAoBAC,eApBA;IAqBAC,UArBA;IAsBAC,iBACA;MACAC,cADA;MAEAC;IAFA,CADA,EAKA;MACAD,gBADA;MAEAC;IAFA,CALA,CAtBA;IAiCAC,YACA;MACAF,iBADA;MAEAC;IAFA,CADA,EAKA;MACAD,gBADA;MAEAC;IAFA,CALA,CAjCA;IA4CAE,YA5CA;IA6CAC;EA7CA,EAFA;EAkDAC;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAjBA;;IAkBA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MAAA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACAC;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QAEA;;QAEA;UACA;UACA;UACAC;UACA;QACA;;QACA;QACA;QACA;MAEA,CA1BA,CA0BA,WACA;IACA,CA5EA;;IA6EA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAA;MACA;IACA;;EApFA,CAlDA;;EAwIAC;IACA;EACA;;AA1IA","names":["name","data","idActe","nom","postnom","prenom","sexe","dateNaissance","lieuNaissance","nationalite","nomPere","nomMere","province","ville","origine","commune","territoire","quartier","avenue","numero","dateEnregistrement","idDeclarant","idUser","itemsEtatCivil","scope","title","itemsSexe","msgAlert","itemsDeclarant","methods","changetypefonction","initializeFields","formData","console","beforeMount"],"sourceRoot":"src/views/acte","sources":["newActe.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h5>Ajouter un acte de naissance</h5>\r\n\t\t<form @submit.prevent=\"addMethod()\" method=\"post\">\r\n\t\t\t<v-row>\r\n\t\t\t\t<v-col lg=\"6\" cols=\"12\">\r\n\t\t\t\t\t<v-text-field v-model=\"nom\" label=\"Nom\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"postnom\" label=\"Postnom\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"prenom\" label=\"Prenom\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t\t</v-col>\r\n\t\t\t\t<v-col lg=\"6\" cols=\"12\">\r\n\t\t\t\t\t<v-select name=\"\" v-model=\"sexe\" :items=\"itemsSexe\" item-text=\"title\" label=\"Genre\"\r\n\t\t\t\t\t\titem-value=\"scope\">\r\n\t\t\t\t\t</v-select>\r\n\t\t\t\t\t<v-text-field v-model=\"dateNaissance\" type=\"date\" label=\"Date de Naissance\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"lieuNaissance\" label=\"Lieu de Naissance\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t</v-col>\r\n\t\t\t</v-row>\r\n\t\t\t<v-row>\r\n\t\t\t\t<v-col lg=\"6\" cols=\"12\">\r\n\t\t\t\t\t<v-text-field v-model=\"nomPere\" label=\"Nom du père\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t</v-col>\r\n\t\t\t\t<v-col lg=\"6\">\r\n\t\t\t\t\t<v-text-field v-model=\"nomMere\" label=\"Nom de la Mère\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t</v-col>\r\n\t\t\t</v-row>\r\n\t\t\t<v-row>\r\n\t\t\t\t<v-col md=\"6\" cols=\"12\">\r\n\t\t\t\t\t<v-text-field v-model=\"province\" label=\"Province\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"ville\" label=\"ville\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"origine\" label=\"Origine\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\r\n\t\t\t\t\t<v-text-field v-model=\"avenue\" label=\"Avenue\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"numero\" type=\"number\" label=\"Numero\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\r\n\t\t\t\t</v-col>\r\n\t\t\t\t<v-col md=\"6\" cols=\"12\">\r\n\t\t\t\t\t<v-text-field v-model=\"nationalite\" label=\"Nationnalité\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"commune\" label=\"Commune\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"territoire\" label=\"Territoire\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-text-field v-model=\"quartier\" label=\"quartier\" required :counter=\"255\">\r\n\t\t\t\t\t</v-text-field>\r\n\t\t\t\t\t<v-select name=\"\" v-model=\"idDeclarant\" :items=\"itemsDeclarant\" item-text=\"title\" label=\"Genre\"\r\n\t\t\t\t\t\titem-value=\"scope\">\r\n\t\t\t\t\t</v-select> \r\n\t\t\t\t</v-col>\r\n\t\t\t</v-row>\r\n\r\n\t\t\t<v-alert :type=\"typeAlert\" v-if=\"msgAlert\" class=\"mb-4\">\r\n\t\t\t\t{{ msgAlert }}\r\n\t\t\t</v-alert>\r\n\t\t\t<v-btn type=\"submit\" color=\"blue\" class=\"mr-4 mt-4 center\">\r\n\t\t\t\tAjouter\r\n\t\t\t</v-btn>\r\n\t\t</form>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n\tname: \"newacte\",\r\n\tdata: () => ({\r\n\t\tidActe: \"\",\r\n\t\tnom: \"\",\r\n\t\tpostnom: \"\",\r\n\t\tprenom: \"\",\r\n\t\tsexe: \"\",\r\n\t\tdateNaissance: \"\",\r\n\t\tlieuNaissance: \"\",\r\n\t\tnationalite: \"\",\r\n\t\tnomPere: \"\",\r\n\t\tnomMere: \"\",\r\n\t\tprovince: \"\",\r\n\t\tville: \"\",\r\n\t\torigine: \"\",\r\n\t\tcommune: \"\",\r\n\t\tterritoire: \"\",\r\n\t\tquartier: \"\",\r\n\t\tavenue: \"\",\r\n\t\tnumero: \"\",\r\n\t\tdateEnregistrement: \"\",\r\n\t\tidDeclarant: \"\",\r\n\t\tidUser: '',\r\n\t\titemsEtatCivil: [\r\n\t\t\t{\r\n\t\t\t\tscope: 'marie',\r\n\t\t\t\ttitle: 'Marié'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tscope: 'celibat',\r\n\t\t\t\ttitle: 'Celibataire'\r\n\t\t\t},\r\n\r\n\t\t],\r\n\t\titemsSexe: [\r\n\t\t\t{\r\n\t\t\t\tscope: 'masculin',\r\n\t\t\t\ttitle: 'Masculin'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tscope: 'feminin',\r\n\t\t\t\ttitle: 'Féminin'\r\n\t\t\t},\r\n\r\n\t\t],\r\n\t\tmsgAlert: '', \r\n\t\titemsDeclarant : ''\r\n\r\n\t}),\r\n\tmethods: {\r\n\t\tchangetypefonction() {\r\n\t\t\tthis.typeAlert = ''\r\n\t\t\tthis.msgAlert = ''\r\n\t\t},\r\n\t\tinitializeFields() {\r\n\t\t\tthis.firstname = ''\r\n\t\t\tthis.lastname = ''\r\n\t\t\tthis.email = ''\r\n\t\t\tthis.password = ''\r\n\t\t\tthis.created_at = ''\r\n\t\t\tthis.scope = ''\r\n\t\t\tthis.professsion = ''\r\n\t\t\tthis.bornin = ''\r\n\t\t\tthis.eta_civil = ''\r\n\t\t\tthis.sexe = ''\r\n\t\t\tthis.residence = ''\r\n\t\t},\r\n\t\tasync addMethod() {\r\n\t\t\tthis.changetypefonction()\r\n\t\t\tif (((String(this.password).length) < 8) || ((String(this.newpassword).length) < 8)) {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \" Le mot de passe doit contenir au minimum 8 caractères !\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (this.sexe == '') {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Veuillez choisir le genre !\"\r\n\t\t\t\treturn\r\n\t\t\t} if ((this.firstname == '') || (this.lastname == '')) {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Tous les noms sont pas complets !\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (this.eta_civil == '') {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Veuillez choisir l'etat civil svp!\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (this.bornin == '') {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Veuillez entrer une date de naissance svp!\"\r\n\t\t\t}\r\n\t\t\tif (this.professsion == '') {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Veuillez definir la professsion!\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst formData = new FormData()\r\n\t\t\t\tformData.append('firstname', this.firstname)\r\n\t\t\t\tformData.append('lastname', this.lastname)\r\n\t\t\t\tformData.append('password', this.password)\r\n\t\t\t\tformData.append('password_confirm', this.password)\r\n\t\t\t\tformData.append('email', this.email)\r\n\t\t\t\tformData.append('scope', \"decl\")\r\n\t\t\t\tformData.append('professsion', this.professsion)\r\n\t\t\t\tformData.append('residence', this.residence)\r\n\t\t\t\tformData.append('etat_civil', this.eta_civil)\r\n\t\t\t\tformData.append('sexe', this.sexe)\r\n\t\t\t\tformData.append('bornin', this.bornin)\r\n\r\n\t\t\t\tconst response = await axios.post('user/register', formData)\r\n\r\n\t\t\t\tif ((response.data.errorstate) == true) {\r\n\t\t\t\t\tthis.typeAlert = 'error'\r\n\t\t\t\t\tthis.msgAlert = response.data.error\r\n\t\t\t\t\tconsole.log(response.data.error)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.msgAlert = 'Acte de naissance enregistré avec succés'\r\n\t\t\t\tthis.typeAlert = 'success'\r\n\t\t\t\tthis.initializeFields()\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getAllDeclarant() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post(\"user/getDeclarant\")\r\n\t\t\t\tthis.itemsDeclarant = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t}\t\r\n\t},\r\n\tbeforeMount() {\r\n\t\tthis.getAllDeclarant()\r\n\t},\r\n\t\r\n}\r\n</script>\r\n\r\n<style>\r\nh5 {\r\n\tcolor: rgb(70, 64, 64);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}