{"ast":null,"code":"import axios from 'axios';\nimport html2pdf from \"html2pdf.js\";\nimport router from '@/router';\nimport { mapState } from 'vuex';\nexport default {\n  name: \"showandprintActe\",\n  data: () => ({\n    idActe: \"\",\n    nom: \"\",\n    firstname: '',\n    lastname: '',\n    postnom: \"\",\n    prenom: \"\",\n    sexe: \"\",\n    dateNaissance: \"\",\n    lieuNaissance: \"\",\n    nationalite: \"\",\n    nomPere: \"\",\n    nomMere: \"\",\n    province: \"\",\n    ville: \"\",\n    origine: \"\",\n    commune: \"\",\n    territoire: \"\",\n    quartier: \"\",\n    avenue: \"\",\n    numero: \"\",\n    professsion: \"\",\n    residence: \"\",\n    dateString: '',\n    dateEnregistrement: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\n    idDeclarant: \"\",\n    idUser: '',\n    infoDeclarant: [],\n    itemsSexe: [{\n      scope: 'masculin',\n      title: 'Masculin'\n    }, {\n      scope: 'feminin',\n      title: 'Féminin'\n    }],\n    msgAlert: '',\n    itemsDeclarant: []\n  }),\n  computed: { ...mapState(['userInfo']),\n\n    getDateFormat() {\n      //compute year\n      var dateString = String(this.dateString);\n      const year = String(dateString).split(\"-\")[0].substr(2, 2); //compute Month\n\n      let mon = String(dateString).slice(5, 7);\n      const date = new Date();\n      date.setMonth(mon - 1);\n      let month = date.toLocaleString('fr', {\n        month: 'long'\n      }); //compute day\n\n      let day = String(dateString).slice(8, 11); //compute hours\n\n      let hours = String(dateString).slice(11);\n      const elementsDate = {\n        year: year,\n        month: month,\n        hours: hours,\n        day: day\n      }; //compute month\n      //compute day\n      //compute hours\n\n      return elementsDate;\n    }\n\n  },\n  methods: {\n    changetypefonction() {\n      this.typeAlert = '';\n      this.msgAlert = '';\n    },\n\n    async printMethode() {\n      html2pdf(document.getElementById(\"actePrint\"), {\n        margin: 5,\n        filename: \"acte -\" + this.idActe + \"-\" + this.dateEnregistrement,\n        jsPDF: {\n          format: 'a5',\n          orientation: 'portrait'\n        }\n      });\n    },\n\n    initializeFields() {\n      this.nom = \"\";\n      this.postnom = \"\";\n      this.prenom = \"\";\n      this.sexe = \"\";\n      this.dateNaissance = \"\";\n      this.lieuNaissance = \"\";\n      this.nationalite = \"\";\n      this.nomPere = \"\";\n      this.nomMere = \"\";\n      this.province = \"\";\n      this.ville = \"\";\n      this.origine = \"\";\n      this.commune = \"\";\n      this.territoire = \"\";\n      this.quartier = \"\";\n      this.avenue = \"\";\n      this.numero = \"\";\n      this.dateEnregistrement = \"\";\n      this.idDeclarant = \"\";\n    },\n\n    async getAllDeclarant() {\n      try {\n        const response = await axios.post(\"user/getDeclarant\");\n        this.itemsDeclarant = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async getInfoActe() {\n      let paramId = router.currentRoute.params.id;\n\n      if (paramId != null) {\n        const response = await axios.post('actenaissance/getActeInfoWithUserInfo/' + paramId);\n        this.nom = response.data.nom;\n        this.postnom = response.data.postnom;\n        this.prenom = response.data.prenom;\n        this.sexe = response.data.sexe;\n        this.dateNaissance = response.data.dateNaissance;\n        this.lieuNaissance = response.data.lieuNaissance;\n        this.nationalite = response.data.nationalite;\n        this.nomPere = response.data.nomPere;\n        this.nomMere = response.data.nomMere;\n        this.province = response.data.province;\n        this.ville = response.data.ville;\n        this.origine = response.data.origine;\n        this.commune = response.data.commune;\n        this.territoire = response.data.territoire;\n        this.quartier = response.data.quartier;\n        this.avenue = response.data.avenue;\n        this.numero = response.data.numero;\n        this.dateEnregistrement = response.data.dateEnregistrement;\n        this.dateString = response.data.dateEnregistrement;\n        this.idDeclarant = response.data.idDeclarant;\n        this.firstname = response.data.firstname;\n        this.lastname = response.data.lastname;\n        this.professsion = response.data.professsion;\n        this.residence = response.data.residence;\n        this.idActe = paramId;\n        console.log(response.data.professsion);\n      }\n    },\n\n    getCurrentTime() {\n      const dateObj = new Date();\n      const currentDate = \":\" + dateObj.getHours() + ':' + dateObj.getMinutes() + ':' + dateObj.getSeconds();\n      return currentDate;\n    }\n\n  },\n\n  beforeMount() {\n    this.getInfoActe();\n    this.getAllDeclarant();\n  }\n\n};","map":{"version":3,"mappings":"AA0CA;AACA;AACA;AACA;AAEA;EACAA,wBADA;EAEAC;IACAC,UADA;IAEAC,OAFA;IAGAC,aAHA;IAIAC,YAJA;IAKAC,WALA;IAMAC,UANA;IAOAC,QAPA;IAQAC,iBARA;IASAC,iBATA;IAUAC,eAVA;IAWAC,WAXA;IAYAC,WAZA;IAaAC,YAbA;IAcAC,SAdA;IAeAC,WAfA;IAgBAC,WAhBA;IAiBAC,cAjBA;IAkBAC,YAlBA;IAmBAC,UAnBA;IAoBAC,UApBA;IAqBAC,eArBA;IAsBAC,aAtBA;IAuBAC,cAvBA;IAwBAC,uEAxBA;IAyBAC,eAzBA;IA0BAC,UA1BA;IA2BAC,iBA3BA;IA4BAC,YACA;MACAC,iBADA;MAEAC;IAFA,CADA,EAKA;MACAD,gBADA;MAEAC;IAFA,CALA,CA5BA;IAuCAC,YAvCA;IAwCAC;EAxCA,EAFA;EA4CAC,YACA,aACA,UADA,EADA;;IAKAC;MACA;MACA;MACA,2DAHA,CAKA;;MACA;MACA;MACAC;MACA;QAAAC;MAAA,GATA,CAWA;;MACA,0CAZA,CAcA;;MACA;MAEA;QACAC,UADA;QAEAD,YAFA;QAGAE,YAHA;QAIAC;MAJA,EAjBA,CAuBA;MAEA;MAEA;;MAEA;IAEA;;EApCA,CA5CA;EAmFAC;IACAC;MACA;MACA;IACA,CAJA;;IAKA;MACAC;QACAC,SADA;QAEAC,gEAFA;QAGAC;UACAC,YADA;UAEAC;QAFA;MAHA;IAQA,CAdA;;IAeAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAnCA;;IAqCA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAC;MACA;IACA,CA5CA;;IA6CA;MACA;;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAA;MAEA;IACA,CA7EA;;IA8EAC;MACA;MACA;MACA;IACA;;EAlFA,CAnFA;;EAuKAC;IACA;IACA;EACA;;AA1KA","names":["name","data","idActe","nom","firstname","lastname","postnom","prenom","sexe","dateNaissance","lieuNaissance","nationalite","nomPere","nomMere","province","ville","origine","commune","territoire","quartier","avenue","numero","professsion","residence","dateString","dateEnregistrement","idDeclarant","idUser","infoDeclarant","itemsSexe","scope","title","msgAlert","itemsDeclarant","computed","getDateFormat","date","month","year","hours","day","methods","changetypefonction","html2pdf","margin","filename","jsPDF","format","orientation","initializeFields","console","getCurrentTime","beforeMount"],"sourceRoot":"src/views/acte","sources":["showandprint.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h2 class=\"mb-4\">Visualisation de l'acte de naissance</h2>\r\n\t\t<form @submit.prevent=\"editMethod()\" method=\"post\">\r\n\t\t\t<div class=\"mb p-2\" id=\"actePrint\">\r\n\t\t\t\t<h2 class=\"titre\">Acte Naissance</h2>\r\n\t\t\t\t<div class=\"body mt-3\">\r\n\t\t\t\t\t<h4>L'an deux mille <span class=\"infoActe\">{{ getDateFormat.year }}</span>\r\n\t\t\t\t\t\tle <span class=\"infoActe\">{{ getDateFormat.day }}</span> du mois de\r\n\t\t\t\t\t\t<span class=\"infoActe\">{{\r\n\t\t\t\t\t\t\t\tgetDateFormat.month\r\n\t\t\t\t\t\t}}</span>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<h4>à <span class=\"infoActe\">{{ lieuNaissance }}</span> heures <span class=\"infoActe\"> {{\r\n\t\t\t\t\t\t\tgetDateFormat.hours\r\n\t\t\t\t\t}}</span></h4>\r\n\t\t\t\t\t<h4>Par devant nous <span> {{ firstname.toUpperCase() }} {{ lastname.toUpperCase() }} </span> </h4>\r\n\t\t\t\t\t<h4>Officier de l'Etat civil de la commune de <span class=\"infoActe\">{{ commune }} </span> </h4>\r\n\t\t\t\t\t<h4>A comparu <span> {{ nom.toUpperCase() }} {{ postnom.toUpperCase() }}</span> en qualité de </h4>\r\n\t\t\t\t\t<h4>Né(e) à <span class=\"infoActe\">{{ lieuNaissance }}</span> le </h4>\r\n\t\t\t\t\t<h4>Profession <span class=\"infoActe\">{{ professsion }}</span></h4>\r\n\t\t\t\t\t<h4>Résident à <span class=\"infoActe\"> {{ residence }} Av {{ avenue }} N.{{ numero }}\r\n\t\t\t\t\t\t\t{{ quartier }}</span></h4>\r\n\t\t\t\t\t<h4>Lequel (laquelle) nous a declaré ce qui suit : le </h4> <span>{{ getDateFormat.day }} </span>\r\n\t\t\t\t\t<h4>du mois de <span>{{ getDateFormat.month }}</span> de l'année <span>{{ getDateFormat.year }}</span>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<h4> est né  <span>{{ nom }} {{ postnom }} {{ prenom }}</span> fils (fille) de {{ nomPere }} né</h4>\r\n\t\t\t\t\t<h4>{{ lieuNaissance }} le {{ dateString.splice(0, 10) }}</h4>\r\n\t\t\t\t\t<h4>Nationalité {{nationalite}}</h4> h4 \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<v-alert :type=\"typeAlert\" v-if=\"msgAlert\" class=\"mb-4\">\r\n\t\t\t\t{{ msgAlert }}\r\n\t\t\t</v-alert>\r\n\r\n\t\t</form>\r\n\t\t<v-btn @click.stop=\"printMethode()\" type=\"submit\" color=\"red\" class=\"mr-4 mt-4 center\">\r\n\t\t\timprimer\r\n\t\t</v-btn>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport html2pdf from \"html2pdf.js\";\r\nimport router from '@/router';\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n\tname: \"showandprintActe\",\r\n\tdata: () => ({\r\n\t\tidActe: \"\",\r\n\t\tnom: \"\",\r\n\t\tfirstname: '',\r\n\t\tlastname: '',\r\n\t\tpostnom: \"\",\r\n\t\tprenom: \"\",\r\n\t\tsexe: \"\",\r\n\t\tdateNaissance: \"\",\r\n\t\tlieuNaissance: \"\",\r\n\t\tnationalite: \"\",\r\n\t\tnomPere: \"\",\r\n\t\tnomMere: \"\",\r\n\t\tprovince: \"\",\r\n\t\tville: \"\",\r\n\t\torigine: \"\",\r\n\t\tcommune: \"\",\r\n\t\tterritoire: \"\",\r\n\t\tquartier: \"\",\r\n\t\tavenue: \"\",\r\n\t\tnumero: \"\",\r\n\t\tprofesssion: \"\",\r\n\t\tresidence: \"\",\r\n\t\tdateString: '',\r\n\t\tdateEnregistrement: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\r\n\t\tidDeclarant: \"\",\r\n\t\tidUser: '',\r\n\t\tinfoDeclarant: [],\r\n\t\titemsSexe: [\r\n\t\t\t{\r\n\t\t\t\tscope: 'masculin',\r\n\t\t\t\ttitle: 'Masculin'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tscope: 'feminin',\r\n\t\t\t\ttitle: 'Féminin'\r\n\t\t\t},\r\n\r\n\t\t],\r\n\t\tmsgAlert: '',\r\n\t\titemsDeclarant: []\r\n\t}),\r\n\tcomputed: {\r\n\t\t...mapState([\r\n\t\t\t'userInfo'\r\n\t\t]),\r\n\r\n\t\tgetDateFormat() {\r\n\t\t\t//compute year\r\n\t\t\tvar dateString = String(this.dateString)\r\n\t\t\tconst year = String(dateString).split(\"-\")[0].substr(2, 2);\r\n\r\n\t\t\t//compute Month\r\n\t\t\tlet mon = String(dateString).slice(5, 7)\r\n\t\t\tconst date = new Date();\r\n\t\t\tdate.setMonth(mon - 1);\r\n\t\t\tlet month = date.toLocaleString('fr', { month: 'long' });\r\n\r\n\t\t\t//compute day\r\n\t\t\tlet day = String(dateString).slice(8, 11)\r\n\r\n\t\t\t//compute hours\r\n\t\t\tlet hours = String(dateString).slice(11)\r\n\r\n\t\t\tconst elementsDate = {\r\n\t\t\t\tyear: year,\r\n\t\t\t\tmonth: month,\r\n\t\t\t\thours: hours,\r\n\t\t\t\tday: day,\r\n\t\t\t};\r\n\t\t\t//compute month\r\n\r\n\t\t\t//compute day\r\n\r\n\t\t\t//compute hours\r\n\r\n\t\t\treturn elementsDate\r\n\r\n\t\t},\r\n\r\n\t},\r\n\tmethods: {\r\n\t\tchangetypefonction() {\r\n\t\t\tthis.typeAlert = ''\r\n\t\t\tthis.msgAlert = ''\r\n\t\t},\r\n\t\tasync printMethode() {\r\n\t\t\thtml2pdf(document.getElementById(\"actePrint\"), {\r\n\t\t\t\tmargin: 5,\r\n\t\t\t\tfilename: \"acte -\" + this.idActe + \"-\" + this.dateEnregistrement,\r\n\t\t\t\tjsPDF: {\r\n\t\t\t\t\tformat: 'a5',\r\n\t\t\t\t\torientation: 'portrait'\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t},\r\n\t\tinitializeFields() {\r\n\t\t\tthis.nom = \"\";\r\n\t\t\tthis.postnom = \"\";\r\n\t\t\tthis.prenom = \"\";\r\n\t\t\tthis.sexe = \"\";\r\n\t\t\tthis.dateNaissance = \"\";\r\n\t\t\tthis.lieuNaissance = \"\";\r\n\t\t\tthis.nationalite = \"\";\r\n\t\t\tthis.nomPere = \"\";\r\n\t\t\tthis.nomMere = \"\";\r\n\t\t\tthis.province = \"\";\r\n\t\t\tthis.ville = \"\";\r\n\t\t\tthis.origine = \"\";\r\n\t\t\tthis.commune = \"\";\r\n\t\t\tthis.territoire = \"\";\r\n\t\t\tthis.quartier = \"\";\r\n\t\t\tthis.avenue = \"\";\r\n\t\t\tthis.numero = \"\";\r\n\t\t\tthis.dateEnregistrement = \"\";\r\n\t\t\tthis.idDeclarant = \"\";\r\n\t\t},\r\n\r\n\t\tasync getAllDeclarant() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post(\"user/getDeclarant\")\r\n\t\t\t\tthis.itemsDeclarant = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getInfoActe() {\r\n\t\t\tlet paramId = router.currentRoute.params.id\r\n\t\t\tif (paramId != null) {\r\n\t\t\t\tconst response = await axios.post('actenaissance/getActeInfoWithUserInfo/' + paramId)\r\n\t\t\t\tthis.nom = response.data.nom;\r\n\t\t\t\tthis.postnom = response.data.postnom;\r\n\t\t\t\tthis.prenom = response.data.prenom;\r\n\t\t\t\tthis.sexe = response.data.sexe;\r\n\t\t\t\tthis.dateNaissance = response.data.dateNaissance;\r\n\t\t\t\tthis.lieuNaissance = response.data.lieuNaissance;\r\n\t\t\t\tthis.nationalite = response.data.nationalite;\r\n\t\t\t\tthis.nomPere = response.data.nomPere;\r\n\t\t\t\tthis.nomMere = response.data.nomMere;\r\n\t\t\t\tthis.province = response.data.province;\r\n\t\t\t\tthis.ville = response.data.ville;\r\n\t\t\t\tthis.origine = response.data.origine;\r\n\t\t\t\tthis.commune = response.data.commune;\r\n\t\t\t\tthis.territoire = response.data.territoire;\r\n\t\t\t\tthis.quartier = response.data.quartier;\r\n\t\t\t\tthis.avenue = response.data.avenue;\r\n\t\t\t\tthis.numero = response.data.numero;\r\n\t\t\t\tthis.dateEnregistrement = response.data.dateEnregistrement;\r\n\t\t\t\tthis.dateString = response.data.dateEnregistrement;\r\n\t\t\t\tthis.idDeclarant = response.data.idDeclarant\r\n\t\t\t\tthis.firstname = response.data.firstname\r\n\t\t\t\tthis.lastname = response.data.lastname\r\n\t\t\t\tthis.professsion = response.data.professsion\r\n\t\t\t\tthis.residence = response.data.residence\r\n\t\t\t\tthis.idActe = paramId\r\n\t\t\t\tconsole.log(response.data.professsion)\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetCurrentTime() {\r\n\t\t\tconst dateObj = new Date();\r\n\t\t\tconst currentDate = \":\" + dateObj.getHours() + ':' + dateObj.getMinutes() + ':' + dateObj.getSeconds();\r\n\t\t\treturn currentDate\r\n\t\t},\r\n\t},\r\n\tbeforeMount() {\r\n\t\tthis.getInfoActe()\r\n\t\tthis.getAllDeclarant()\r\n\t}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh5 {\r\n\tcolor: rgb(70, 64, 64);\r\n}\r\n\r\n.body {\r\n\tdisplay: block;\r\n}\r\n\r\n#actePrint {\r\n\tbackground-color: rgb(235, 224, 209);\r\n}\r\n\r\n#actePrint {\r\n\tmin-width: 100%;\r\n\tmax-width: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n#actePrint .titre {\r\n\ttext-decoration: underline;\r\n\ttext-align: center;\r\n}\r\n\r\n.infoActe {\r\n\ttext-decoration: underline;\r\n\tcolor: rgb(65, 65, 190)\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}