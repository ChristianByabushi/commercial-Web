{"ast":null,"code":"import msg from \"@/views/messages/listemessage.vue\";\nexport default {\n  name: 'Messages',\n  components: {\n    msg\n  },\n  data: () => ({\n    specificResult: [],\n    created_at: new Date().toJSON().slice(0, 10).replace(/-/g, '-')\n  }),\n  methods: {\n    async getInfoByid(item) {\n      try {\n        const response = await axios.post('user/getInfoByid/' + item);\n        return response.data.id;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async getDashboardanalysis() {\n      try {\n        const response = await axios.post('lineInvoice/dashboardanalysis/' + this.getDate());\n        var result = response.data;\n        this.specificResult = [{\n          title: \"Total des déclarants\",\n          timer: '',\n          color: \"#FD00FFFF\",\n          amounts: result.totalAmountby.totalAmountBought\n        }, {\n          title: \"Total enfants déclarés\",\n          timer: '2 dernières semaines',\n          color: '#FF8800FF',\n          amounts: result.totalAmountSold.totalAmountSold\n        }];\n        this.DetailsItems = result.DetailsItems;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    getDate() {\n      var twoWeeks = 1000 * 60 * 60 * 24 * 14;\n      var twoWeeksTime = new Date(new Date().getTime() - twoWeeks);\n      var formattedDate = twoWeeksTime.getFullYear() + '-' + (twoWeeksTime.getMonth() + 1) + '-' + twoWeeksTime.getDate();\n      return formattedDate;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0CA;AACA;EACAA,gBADA;EAEAC;IACAC;EADA,CAFA;EAMAC;IACAC,kBADA;IAEAC;EAFA,EANA;EAUAC;IACA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAC;MACA;IACA,CARA;;IASA;MACA;QACA;QACA;QACA,uBACA;UAAAC;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAH;UAAAC;UAAAC;UAAAC;QAAA,CAFA;QAIA;MACA,CARA,CAQA;QACAJ;MACA;IACA,CArBA;;IAsBAK;MACA;MACA;MACA;MACA;IACA;;EA3BA;AAVA","names":["name","components","msg","data","specificResult","created_at","methods","console","title","timer","color","amounts","getDate"],"sourceRoot":"src/views/admin","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-subheader class=\"d-flex justify-space-between align-center\">\r\n      <h3>Suivi des actes</h3>\r\n    </v-subheader>\r\n    <v-alert dense type=\"info\" color=\"#757575\">\r\n      Cette partie contient toutes fonctions sur les statistiques des actes dans la commune de bagira\r\n    </v-alert>\r\n\r\n\r\n    <v-row>\r\n      <v-col lg=\"6\" cols=\"12\">\r\n        <v-alert dense type=\"success\" color=\"#0091EA\">\r\n          Connexion réussie avec succès <strong>Bon travail</strong> !\r\n        </v-alert>\r\n\r\n        <v-row>\r\n          <v-col lg=\"4\" cols=\"12\" v-for=\"(item, index) in specificResult\" :key=\"index\">\r\n            <v-card elevation=\"4\" class=\"rounded-lg\">\r\n              <v-card-text class=\"d-flex justify-space-between align-center\">\r\n                <div class=\"inline\">\r\n                  <strong>{{ item.title }}</strong>\r\n                  <small> ({{item.timer}})</small>\r\n                </div>\r\n                <v-avatar :color=\"item.color\" size=\"60\">\r\n                  <span class=\"\">{{ item.amounts }}</span>\r\n                </v-avatar>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n      <v-col lg=\"6\" cols=\"12\">\r\n        <v-card>\r\n          <msg></msg>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport msg from \"@/views/messages/listemessage.vue\"\r\nexport default {\r\n  name: 'Messages',\r\n  components: {\r\n    msg\r\n  },\r\n\r\n  data: () => ({\r\n    specificResult: [],\r\n    created_at: new Date().toJSON().slice(0, 10).replace(/-/g, '-'),\r\n  }),\r\n  methods: {\r\n    async getInfoByid(item) {\r\n      try {\r\n        const response = await axios.post('user/getInfoByid/' + item)\r\n        return response.data.id\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    async getDashboardanalysis() {\r\n      try {\r\n        const response = await axios.post('lineInvoice/dashboardanalysis/' + this.getDate())\r\n        var result = response.data\r\n        this.specificResult = [\r\n          { title: \"Total des déclarants\", timer:'' ,  color: \"#FD00FFFF\", amounts: result.totalAmountby.totalAmountBought  },\r\n          { title: \"Total enfants déclarés\", timer:'2 dernières semaines', color: '#FF8800FF', amounts: result.totalAmountSold.totalAmountSold },\r\n        ]\r\n        this.DetailsItems = result.DetailsItems\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    getDate() {\r\n      var twoWeeks = 1000 * 60 * 60 * 24 * 14;\r\n      var twoWeeksTime = new Date(new Date().getTime() - twoWeeks);\r\n      var formattedDate = twoWeeksTime.getFullYear() + '-' + (twoWeeksTime.getMonth() + 1) + '-' + twoWeeksTime.getDate();\r\n      return formattedDate\r\n    }\r\n  }\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}