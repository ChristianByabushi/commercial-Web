{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"resultInvoice\",\n  components: {},\n  data: () => ({\n    listInvoices: [],\n    listInlines: [],\n    printLine: '',\n    printinline: [],\n    listInvoicesPrint: [],\n    inlineInfo: [],\n    header_lineinvoices: [{\n      text: 'idOp',\n      align: 'start',\n      sortable: true,\n      value: 'id_line'\n    }, {\n      text: 'Client',\n      value: 'client'\n    }, {\n      text: 'Date',\n      value: 'created_at'\n    }, {\n      text: 'Prix Total ',\n      value: 'totalprice'\n    }, {\n      text: 'Reduction Accordée',\n      value: 'decrease'\n    }, {\n      text: 'Net à payer',\n      value: 'net_total_price'\n    }, {\n      text: 'actions',\n      value: 'actions'\n    }]\n  }),\n  methods: {\n    computeTotalPriceTopay() {\n      var r = 0;\n      this.listInvoicesPrint.forEach(element => {\n        r += element.pt;\n      });\n    },\n\n    async printInvoiceInline(idlineinvoice) {\n      try {\n        const response = await axios.post('lineInvoice/getInvoiceInfo/' + idlineinvoice.id_line);\n        this.listInvoicesPrint = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async inlineinfo(idlineinvoice) {\n      try {\n        const response = await axios.post('lineInvoice/getInlineInfo/' + idlineinvoice.id_line);\n        this.inlineInfo = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    printMethode() {\n      html2pdf(document.getElementById(\"element-to-convert\"), {\n        margin: 5,\n        filename: \"facture -\" + idlineinvoice.client + \"-\" + idlineinvoice.client,\n        jsPDF: {\n          unit: 'in',\n          format: 'a6',\n          orientation: 'portrait'\n        }\n      });\n    },\n\n    async deleteInvoiceInline(idlineinvoice) {\n      if (confirm(\"Voulez-vous supprimer cette facture de l'operation \" + idlineinvoice.id_line + \" ?\")) {\n        try {\n          const response = await axios.post('lineInvoice/deleteInvoice/' + idlineinvoice.id_line);\n          this.listInvoices = response.data;\n          this.get_listInlines();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    },\n\n    async get_listInvoices() {\n      try {\n        const response = await axios.post('invoice/');\n        this.listInvoices = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async get_listInlines() {\n      try {\n        const response = await axios.post('lineInvoice/');\n        this.listInlines = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  },\n\n  created() {\n    this.get_listInvoices();\n    this.get_listInlines();\n  }\n\n};","map":{"version":3,"mappings":"AAgFA;AAEA;EACAA,qBADA;EAEAC,cAFA;EAKAC;IACAC,gBADA;IAEAC,eAFA;IAGAC,aAHA;IAIAC,eAJA;IAKAC,qBALA;IAMAC,cANA;IAOAC,sBACA;MACAC,YADA;MAEAC,cAFA;MAGAC,cAHA;MAIAC;IAJA,CADA,EAOA;MAAAH;MAAAG;IAAA,CAPA,EAQA;MAAAH;MAAAG;IAAA,CARA,EASA;MAAAH;MAAAG;IAAA,CATA,EAUA;MAAAH;MAAAG;IAAA,CAVA,EAWA;MAAAH;MAAAG;IAAA,CAXA,EAYA;MAAAH;MAAAG;IAAA,CAZA;EAPA,EALA;EA4BAC;IACAC;MACA;MACA;QACAC;MACA,CAFA;IAGA,CANA;;IAOA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAC;MACA;IACA,CAdA;;IAeA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAA;MACA;IACA,CAtBA;;IAwBAC;MACAC;QACAC,SADA;QAEAC,yEAFA;QAGAC;UACAC,UADA;UAEAC,YAFA;UAGAC;QAHA;MAHA;IAUA,CAnCA;;IAoCA;MACA;QACA;UACA;UACA;UACA;QACA,CAJA,CAIA;UACAR;QACA;MACA;IAEA,CA/CA;;IAgDA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAA;MACA;IACA,CAvDA;;IAwDA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAA;MACA;IACA;;EA/DA,CA5BA;;EA6FAS;IACA;IACA;EACA;;AAhGA","names":["name","components","data","listInvoices","listInlines","printLine","printinline","listInvoicesPrint","inlineInfo","header_lineinvoices","text","align","sortable","value","methods","computeTotalPriceTopay","r","console","printMethode","html2pdf","margin","filename","jsPDF","unit","format","orientation","created"],"sourceRoot":"src/views/invoices","sources":["resultInvoice.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<v-subheader class=\"d-flex justify-space-between align-center\">\r\n\t\t\t<h3>Résultats</h3>\r\n\t\t</v-subheader>\r\n\t\t<v-card>\r\n\t\t\t<div id=\"element-to-convert\">\r\n\t\t\t\t<v-card-title>\r\n\t\t\t\t\t<div style=\"display: inline\">\r\n\t\t\t\t\t\t<h2>Sté HumanATM</h2>\r\n\t\t\t\t\t\t<h2>Client : {{inlineInfo.client}}</h2>\r\n\t\t\t\t\t\t<h4>Date : {{inlineInfo.created_at}}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</v-card-title>\r\n\t\t\t\t<v-card-text>\r\n\t\t\t\t\t<v-data-table :headers=\"header_line_print\" :items=\"listInvoicesPrint\" :items-per-page=\"5\"\r\n\t\t\t\t\t\tclass=\"elevation-1\">\r\n\t\t\t\t\t</v-data-table>\r\n\t\t\t\t\t<v-simple-table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th class=\"text-left\">\r\n\t\t\t\t\t\t\t\t\tTitle\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th class=\"text-left\">\r\n\t\t\t\t\t\t\t\t\tP.U\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th class=\"text-left\">\r\n\t\t\t\t\t\t\t\t\tQté\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th class=\"text-left\">\r\n\t\t\t\t\t\t\t\t\tPt\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th class=\"text-left\">\r\n\t\t\t\t\t\t\t\t\tPrix Total\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr v-for=\"(item, index) in listInvoicesPrint\">\r\n\t\t\t\t\t\t\t\t<td>{{ item.title }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ item.pu_sale }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ item.amount_sale }}</td>\r\n\t\t\t\t\t\t\t\t<td>{{ Number(item.pt).toFixed(3) }}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</v-simple-table>\r\n\r\n\t\t\t\t\t<div style=\"display: inline; text-align: right; \">\r\n\t\t\t\t\t\t<h5 style=\"margin-top: 10px;\">Total Brut:</h5>\r\n\t\t\t\t\t\t<h5>Réduction : {{inlineInfo.client}}</h5>\r\n\t\t\t\t\t\t<h5>Prix total à payer : {{inlineInfo.created_at}}</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</v-card-text>\r\n\t\t\t</div>\r\n\t\t</v-card>\r\n\t\t<v-card>\r\n\t\t\t<v-card-title class=\"d-flex-inline\">\r\n\t\t\t\t<v-row>\r\n\t\t\t\t\t<h6>All</h6>\r\n\t\t\t\t</v-row>\r\n\t\t\t</v-card-title>\r\n\t\t\t<v-card-text>\r\n\t\t\t\t<v-data-table :headers=\"header_lineinvoices\" :items=\"listInlines\" :items-per-page=\"5\"\r\n\t\t\t\t\tclass=\"elevation-1\">\r\n\t\t\t\t\t<template v-slot:item.actions=\"{ item }\" class=\"d-flex justify-space-between align-center\">\r\n\t\t\t\t\t\t<v-icon small color=\"purple\" @click=\"printInvoiceInline(item)\">\r\n\t\t\t\t\t\t\tmdi-printer\r\n\t\t\t\t\t\t</v-icon>\r\n\t\t\t\t\t\t<v-icon small class=\"mr-2\" @click.stop=\"deleteInvoiceInline(item)\" color=\"red\">\r\n\t\t\t\t\t\t\tmdi-delete\r\n\t\t\t\t\t\t</v-icon>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</v-data-table>\r\n\t\t\t</v-card-text>\r\n\t\t</v-card>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n\tname: \"resultInvoice\",\r\n\tcomponents: {\r\n\r\n\t},\r\n\tdata: () => ({\r\n\t\tlistInvoices: [],\r\n\t\tlistInlines: [],\r\n\t\tprintLine: '',\r\n\t\tprintinline: [],\r\n\t\tlistInvoicesPrint: [],\r\n\t\tinlineInfo: [],\r\n\t\theader_lineinvoices: [\r\n\t\t\t{\r\n\t\t\t\ttext: 'idOp',\r\n\t\t\t\talign: 'start',\r\n\t\t\t\tsortable: true,\r\n\t\t\t\tvalue: 'id_line',\r\n\t\t\t},\r\n\t\t\t{ text: 'Client', value: 'client' },\r\n\t\t\t{ text: 'Date', value: 'created_at' },\r\n\t\t\t{ text: 'Prix Total ', value: 'totalprice' },\r\n\t\t\t{ text: 'Reduction Accordée', value: 'decrease' },\r\n\t\t\t{ text: 'Net à payer', value: 'net_total_price' },\r\n\t\t\t{ text: 'actions', value: 'actions' },\r\n\t\t],\r\n\r\n\t}),\r\n\tmethods: {\r\n\t\tcomputeTotalPriceTopay() {\r\n\t\t\tvar r = 0;\r\n\t\t\tthis.listInvoicesPrint.forEach(element => {\r\n\t\t\t\tr += element.pt\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync printInvoiceInline(idlineinvoice) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post('lineInvoice/getInvoiceInfo/' + idlineinvoice.id_line)\r\n\t\t\t\tthis.listInvoicesPrint = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync inlineinfo(idlineinvoice) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post('lineInvoice/getInlineInfo/' + idlineinvoice.id_line)\r\n\t\t\t\tthis.inlineInfo = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprintMethode() {\r\n\t\t\thtml2pdf(document.getElementById(\"element-to-convert\"), {\r\n\t\t\t\tmargin: 5,\r\n\t\t\t\tfilename: \"facture -\" + idlineinvoice.client + \"-\" + idlineinvoice.client,\r\n\t\t\t\tjsPDF: {\r\n\t\t\t\t\tunit: 'in',\r\n\t\t\t\t\tformat: 'a6',\r\n\t\t\t\t\torientation: 'portrait'\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t},\r\n\t\tasync deleteInvoiceInline(idlineinvoice) {\r\n\t\t\tif (confirm(\"Voulez-vous supprimer cette facture de l'operation \" + idlineinvoice.id_line + \" ?\")) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await axios.post('lineInvoice/deleteInvoice/' + idlineinvoice.id_line)\r\n\t\t\t\t\tthis.listInvoices = response.data\r\n\t\t\t\t\tthis.get_listInlines()\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tasync get_listInvoices() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post('invoice/')\r\n\t\t\t\tthis.listInvoices = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync get_listInlines() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post('lineInvoice/')\r\n\t\t\t\tthis.listInlines = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcreated() {\r\n\t\tthis.get_listInvoices()\r\n\t\tthis.get_listInlines()\r\n\t}\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#element-to-convert {\r\n\tbackground-color: rgb(191, 175, 175);\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}