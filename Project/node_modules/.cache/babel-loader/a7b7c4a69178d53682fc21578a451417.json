{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router';\nexport default {\n  name: \"showandprintActe\",\n  data: () => ({\n    idActe: \"\",\n    nom: \"\",\n    postnom: \"\",\n    prenom: \"\",\n    sexe: \"\",\n    dateNaissance: \"\",\n    lieuNaissance: \"\",\n    nationalite: \"\",\n    nomPere: \"\",\n    nomMere: \"\",\n    province: \"\",\n    ville: \"\",\n    origine: \"\",\n    commune: \"\",\n    territoire: \"\",\n    quartier: \"\",\n    avenue: \"\",\n    numero: \"\",\n    dateString: '',\n    dateEnregistrement: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\n    idDeclarant: \"\",\n    idUser: '',\n    itemsSexe: [{\n      scope: 'masculin',\n      title: 'Masculin'\n    }, {\n      scope: 'feminin',\n      title: 'Féminin'\n    }],\n    msgAlert: '',\n    itemsDeclarant: []\n  }),\n  computed: {\n    getYearActe() {\n      console.log(this.dateString);\n      let year = String(this.dateString).split(\"/\")[0].substr(2, 3);\n      return year;\n    },\n\n    getMothActe() {\n      let day = String(this.dateEnregistrement).split(\"/\")[1].substr(2, 3);\n      const date = new Date();\n      date.setMonth(day - 1);\n      return date.toLocaleString('fr', {\n        month: 'long'\n      });\n    },\n\n    getdayActe() {\n      console.log(this.dateString);\n      let day = this.dateEnregistrement.split(\"/\")[2];\n      return day;\n    },\n\n    getHoursActe() {\n      console.log(this.dateString);\n      let hour = String(this.dateString);\n      console.log(hour.split());\n    }\n\n  },\n  methods: {\n    changetypefonction() {\n      this.typeAlert = '';\n      this.msgAlert = '';\n    },\n\n    async printMethode() {\n      html2pdf(document.getElementById(\"element-to-convert\"), {\n        margin: 5,\n        filename: \"acte -\" + this.idActe + \"-\" + this.dateEnregistrement,\n        jsPDF: {\n          format: 'a6',\n          orientation: 'portrait'\n        }\n      });\n    },\n\n    initializeFields() {\n      this.nom = \"\";\n      this.postnom = \"\";\n      this.prenom = \"\";\n      this.sexe = \"\";\n      this.dateNaissance = \"\";\n      this.lieuNaissance = \"\";\n      this.nationalite = \"\";\n      this.nomPere = \"\";\n      this.nomMere = \"\";\n      this.province = \"\";\n      this.ville = \"\";\n      this.origine = \"\";\n      this.commune = \"\";\n      this.territoire = \"\";\n      this.quartier = \"\";\n      this.avenue = \"\";\n      this.numero = \"\";\n      this.dateEnregistrement = \"\";\n      this.idDeclarant = \"\";\n    },\n\n    async getAllDeclarant() {\n      try {\n        const response = await axios.post(\"user/getDeclarant\");\n        this.itemsDeclarant = response.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async getInfoActe() {\n      let paramId = router.currentRoute.params.id;\n\n      if (paramId != null) {\n        const response = await axios.post('actenaissance/getActeInfo/' + paramId);\n        this.nom = response.data.nom;\n        this.postnom = response.data.postnom;\n        this.prenom = response.data.prenom;\n        this.sexe = response.data.sexe;\n        this.dateNaissance = response.data.dateNaissance;\n        this.lieuNaissance = response.data.lieuNaissance;\n        this.nationalite = response.data.nationalite;\n        this.nomPere = response.data.nomPere;\n        this.nomMere = response.data.nomMere;\n        this.province = response.data.province;\n        this.ville = response.data.ville;\n        this.origine = response.data.origine;\n        this.commune = response.data.commune;\n        this.territoire = response.data.territoire;\n        this.quartier = response.data.quartier;\n        this.avenue = response.data.avenue;\n        this.numero = response.data.numero;\n        this.dateEnregistrement = response.data.dateEnregistrement;\n        this.dateString = response.data.dateEnregistrement;\n        this.idDeclarant = response.data.idDeclarant;\n        this.idActe = paramId;\n      }\n    },\n\n    getCurrentTime() {\n      const dateObj = new Date();\n      const currentDate = \":\" + dateObj.getHours() + ':' + dateObj.getMinutes() + ':' + dateObj.getSeconds();\n      return currentDate;\n    }\n\n  },\n\n  beforeMount() {\n    this.getAllDeclarant();\n    this.getInfoActe();\n  }\n\n};","map":{"version":3,"mappings":"AAqBA;AACA;AACA;EACAA,wBADA;EAEAC;IACAC,UADA;IAEAC,OAFA;IAGAC,WAHA;IAIAC,UAJA;IAKAC,QALA;IAMAC,iBANA;IAOAC,iBAPA;IAQAC,eARA;IASAC,WATA;IAUAC,WAVA;IAWAC,YAXA;IAYAC,SAZA;IAaAC,WAbA;IAcAC,WAdA;IAeAC,cAfA;IAgBAC,YAhBA;IAiBAC,UAjBA;IAkBAC,UAlBA;IAmBAC,cAnBA;IAoBAC,uEApBA;IAqBAC,eArBA;IAsBAC,UAtBA;IAuBAC,YACA;MACAC,iBADA;MAEAC;IAFA,CADA,EAKA;MACAD,gBADA;MAEAC;IAFA,CALA,CAvBA;IAkCAC,YAlCA;IAmCAC;EAnCA,EAFA;EAuCAC;IACAC;MACAC;MACA;MACA;IACA,CALA;;IAMAC;MACA;MACA;MACAC;MACA;QAAAC;MAAA;IACA,CAXA;;IAYAC;MACAJ;MACA;MACA;IACA,CAhBA;;IAiBAK;MACAL;MAEA;MACAA;IACA;;EAtBA,CAvCA;EA+DAM;IAIAC;MACA;MACA;IACA,CAPA;;IAQA;MACAC;QACAC,SADA;QAEAC,gEAFA;QAGAC;UACAC,YADA;UAEAC;QAFA;MAHA;IAQA,CAjBA;;IAkBAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAtCA;;IAwCA;MACA;QACA;QACA;MACA,CAHA,CAGA;QACAd;MACA;IACA,CA/CA;;IAgDA;MACA;;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA,CA1EA;;IA2EAe;MACA;MACA;MACA;IACA;;EA/EA,CA/DA;;EAgJAC;IACA;IACA;EACA;;AAnJA","names":["name","data","idActe","nom","postnom","prenom","sexe","dateNaissance","lieuNaissance","nationalite","nomPere","nomMere","province","ville","origine","commune","territoire","quartier","avenue","numero","dateString","dateEnregistrement","idDeclarant","idUser","itemsSexe","scope","title","msgAlert","itemsDeclarant","computed","getYearActe","console","getMothActe","date","month","getdayActe","getHoursActe","methods","changetypefonction","html2pdf","margin","filename","jsPDF","format","orientation","initializeFields","getCurrentTime","beforeMount"],"sourceRoot":"src/views/acte","sources":["showandprint.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h5>Visualisation de l'acte de naissance</h5>\r\n\t\t<form @submit.prevent=\"editMethod()\" method=\"post\">\r\n\t\t\t<div class=\"mb p-2\" id=\"actePrint\" max-width=\"50%\">\r\n\t\t\t\t<h2 class=\"titre\">Acte Naissance</h2>\r\n\t\t\t\t<div class=\"body mt-3\">\r\n\t\t\t\t\t<h4>à {{ lieuNaissance }} heures {{ getHoursActe }}</h4>\r\n\t\t\t\t\t<h4>L'an deux mille {{ getYearActe }} le {{ getdayActe }} du mois de {{ getMothActe }}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<v-alert :type=\"typeAlert\" v-if=\"msgAlert\" class=\"mb-4\">\r\n\t\t\t\t{{ msgAlert }}\r\n\t\t\t</v-alert>\r\n\t\t\t<v-btn type=\"submit\" color=\"red\" class=\"mr-4 mt-4 center\">\r\n\t\t\t\timprimer\r\n\t\t\t</v-btn>\r\n\t\t</form>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport router from '@/router';\r\nexport default {\r\n\tname: \"showandprintActe\",\r\n\tdata: () => ({\r\n\t\tidActe: \"\",\r\n\t\tnom: \"\",\r\n\t\tpostnom: \"\",\r\n\t\tprenom: \"\",\r\n\t\tsexe: \"\",\r\n\t\tdateNaissance: \"\",\r\n\t\tlieuNaissance: \"\",\r\n\t\tnationalite: \"\",\r\n\t\tnomPere: \"\",\r\n\t\tnomMere: \"\",\r\n\t\tprovince: \"\",\r\n\t\tville: \"\",\r\n\t\torigine: \"\",\r\n\t\tcommune: \"\",\r\n\t\tterritoire: \"\",\r\n\t\tquartier: \"\",\r\n\t\tavenue: \"\",\r\n\t\tnumero: \"\",\r\n\t\tdateString: '',\r\n\t\tdateEnregistrement: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\r\n\t\tidDeclarant: \"\",\r\n\t\tidUser: '',\r\n\t\titemsSexe: [\r\n\t\t\t{\r\n\t\t\t\tscope: 'masculin',\r\n\t\t\t\ttitle: 'Masculin'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tscope: 'feminin',\r\n\t\t\t\ttitle: 'Féminin'\r\n\t\t\t},\r\n\r\n\t\t],\r\n\t\tmsgAlert: '',\r\n\t\titemsDeclarant: []\r\n\t}),\r\n\tcomputed: {\r\n\t\tgetYearActe() { \r\n\t\t\tconsole.log(this.dateString)\r\n\t\t\tlet year = String(this.dateString).split(\"/\")[0].substr(2, 3);\r\n\t\t\treturn year\r\n\t\t},\r\n\t\tgetMothActe() {\r\n\t\t\tlet day = String(this.dateEnregistrement).split(\"/\")[1].substr(2, 3);\r\n\t\t\tconst date = new Date();\r\n\t\t\tdate.setMonth(day - 1);\r\n\t\t\treturn date.toLocaleString('fr', { month: 'long' });\r\n\t\t},\r\n\t\tgetdayActe() { \r\n\t\t\tconsole.log(this.dateString)\r\n\t\t\tlet day = this.dateEnregistrement.split(\"/\")[2];\r\n\t\t\treturn day\r\n\t\t},\r\n\t\tgetHoursActe() {\r\n\t\t\tconsole.log(this.dateString)\r\n\r\n\t\t\tlet hour = String(this.dateString)\r\n\t\t\tconsole.log(hour.split())\r\n\t\t},\r\n\t},\r\n\tmethods: {\r\n\r\n\r\n\r\n\t\tchangetypefonction() {\r\n\t\t\tthis.typeAlert = ''\r\n\t\t\tthis.msgAlert = ''\r\n\t\t},\r\n\t\tasync printMethode() {\r\n\t\t\thtml2pdf(document.getElementById(\"element-to-convert\"), {\r\n\t\t\t\tmargin: 5,\r\n\t\t\t\tfilename: \"acte -\" + this.idActe + \"-\" + this.dateEnregistrement,\r\n\t\t\t\tjsPDF: {\r\n\t\t\t\t\tformat: 'a6',\r\n\t\t\t\t\torientation: 'portrait'\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t},\r\n\t\tinitializeFields() {\r\n\t\t\tthis.nom = \"\";\r\n\t\t\tthis.postnom = \"\";\r\n\t\t\tthis.prenom = \"\";\r\n\t\t\tthis.sexe = \"\";\r\n\t\t\tthis.dateNaissance = \"\";\r\n\t\t\tthis.lieuNaissance = \"\";\r\n\t\t\tthis.nationalite = \"\";\r\n\t\t\tthis.nomPere = \"\";\r\n\t\t\tthis.nomMere = \"\";\r\n\t\t\tthis.province = \"\";\r\n\t\t\tthis.ville = \"\";\r\n\t\t\tthis.origine = \"\";\r\n\t\t\tthis.commune = \"\";\r\n\t\t\tthis.territoire = \"\";\r\n\t\t\tthis.quartier = \"\";\r\n\t\t\tthis.avenue = \"\";\r\n\t\t\tthis.numero = \"\";\r\n\t\t\tthis.dateEnregistrement = \"\";\r\n\t\t\tthis.idDeclarant = \"\";\r\n\t\t},\r\n\r\n\t\tasync getAllDeclarant() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post(\"user/getDeclarant\")\r\n\t\t\t\tthis.itemsDeclarant = response.data\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getInfoActe() {\r\n\t\t\tlet paramId = router.currentRoute.params.id\r\n\t\t\tif (paramId != null) {\r\n\t\t\t\tconst response = await axios.post('actenaissance/getActeInfo/' + paramId)\r\n\t\t\t\tthis.nom = response.data.nom;\r\n\t\t\t\tthis.postnom = response.data.postnom;\r\n\t\t\t\tthis.prenom = response.data.prenom;\r\n\t\t\t\tthis.sexe = response.data.sexe;\r\n\t\t\t\tthis.dateNaissance = response.data.dateNaissance;\r\n\t\t\t\tthis.lieuNaissance = response.data.lieuNaissance;\r\n\t\t\t\tthis.nationalite = response.data.nationalite;\r\n\t\t\t\tthis.nomPere = response.data.nomPere;\r\n\t\t\t\tthis.nomMere = response.data.nomMere;\r\n\t\t\t\tthis.province = response.data.province;\r\n\t\t\t\tthis.ville = response.data.ville;\r\n\t\t\t\tthis.origine = response.data.origine;\r\n\t\t\t\tthis.commune = response.data.commune;\r\n\t\t\t\tthis.territoire = response.data.territoire;\r\n\t\t\t\tthis.quartier = response.data.quartier;\r\n\t\t\t\tthis.avenue = response.data.avenue;\r\n\t\t\t\tthis.numero = response.data.numero;\r\n\t\t\t\tthis.dateEnregistrement = response.data.dateEnregistrement;\r\n\t\t\t\tthis.dateString = response.data.dateEnregistrement;\r\n\t\t\t\tthis.idDeclarant = response.data.idDeclarant\r\n\t\t\t\tthis.idActe = paramId\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetCurrentTime() {\r\n\t\t\tconst dateObj = new Date();\r\n\t\t\tconst currentDate = \":\" + dateObj.getHours() + ':' + dateObj.getMinutes() + ':' + dateObj.getSeconds();\r\n\t\t\treturn currentDate\r\n\t\t},\r\n\t},\r\n\tbeforeMount() {\r\n\t\tthis.getAllDeclarant()\r\n\t\tthis.getInfoActe()\r\n\t}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh5 {\r\n\tcolor: rgb(70, 64, 64);\r\n}\r\n\r\n.body {\r\n\tdisplay: block;\r\n}\r\n\r\n#actePrint {\r\n\tbackground-color: rgb(235, 224, 209);\r\n}\r\n\r\n#actePrint .titre {\r\n\ttext-decoration: underline;\r\n\ttext-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}