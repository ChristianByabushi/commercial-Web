{"ast":null,"code":"import { mapState } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: \"listeacte\",\n  computed: mapState(['userInfo']),\n  data: () => ({\n    messsage: '',\n    kind: '',\n    receiverEmail: '',\n    idReceiver: '',\n    users: [],\n    typeAlert: '',\n    msgAlert: ''\n  }),\n  methods: {\n    initializeComponent() {\n      this.msgAlert = '';\n      this.typeAlert = '';\n    },\n\n    async envoyerMessage() {\n      this.initializeComponent();\n\n      try {\n        const formData = new FormData();\n        formData.append('email', this.receiverEmail);\n        formData.append('message', this.message);\n        formData.append('writer', this.userInfo.id);\n        formData.append('receiver', this.idReceiver);\n        formData.append('kind', 0);\n        formData.append('created_at', this.getCurrentTime());\n        console.log(this.message);\n        return;\n        const response = await axios.post('messages/create', formData);\n\n        if (response.data.errorstate == true) {\n          this.typeAlert = 'error';\n          this.msgAlert = \"Veuillez Verifier l'adresse email, (message non envoyé !)\";\n          console.log(response.data);\n          return;\n        }\n\n        this.typeAlert = 'success';\n        this.msgAlert = \"Message envoyé avec succès\";\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    getCurrentTime() {\n      const dateObj = new Date();\n      const currentDate = \":\" + dateObj.getHours() + ':' + dateObj.getMinutes() + ':' + dateObj.getSeconds();\n      return currentDate;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA;AACA;AACA;EACAA,iBADA;EAEAC,oBACA,UADA,EAFA;EAKAC;IACAC,YADA;IAEAC,QAFA;IAGAC,iBAHA;IAIAC,cAJA;IAKAC,SALA;IAMAC,aANA;IAOAC;EAPA,EALA;EAcAC;IACAC;MACA;MACA;IACA,CAJA;;IAKA;MACA;;MACA;QAKA;QACAC;QACAA;QACAA;QACAA;QACAA;QACAA;QACAC;QACA;QACA;;QACA;UACA;UACA;UACAA;UACA;QACA;;QACA;QACA;QACAA;MACA,CAxBA,CAwBA;QACAA;MACA;IACA,CAlCA;;IAmCAC;MACA;MACA;MACA;IACA;;EAvCA;AAdA","names":["name","computed","data","messsage","kind","receiverEmail","idReceiver","users","typeAlert","msgAlert","methods","initializeComponent","formData","console","getCurrentTime"],"sourceRoot":"src/views/messages","sources":["newmessage.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<v-subheader>\r\n\t\t\t<h3>Nouveau message</h3>\r\n\t\t</v-subheader>\r\n\t\t<v-card>\r\n\t\t\t<h6>Expéditeur : {{ userInfo.email }}</h6>\r\n\t\t</v-card>\r\n\t\t<form @submit.prevent=\"envoyerMessage()\" method=\"post\">\r\n\t\t\t<v-card>\r\n\t\t\t\t<v-card-title class=\"text-h5\">\r\n\t\t\t\t\t<v-text-field v-model=\"receiverEmail\" label=\"email Destinaire\" width=\"50%\"></v-text-field>\r\n\t\t\t\t</v-card-title>\r\n\t\t\t\t<v-card-text>\r\n\t\t\t\t\t<v-text-field v-model=\"messsage\" label=\"Contenu\" ></v-text-field> \r\n\t\t\t<v-text-field v-model=\"messsage\" label=\"Contenu\" required :counter=\"255\"> </v-text-field>\r\n\r\n\t\t\t\t</v-card-text>\r\n\t\t\t\t<v-alert :type=\"typeAlert\" v-if=\"msgAlert\" class=\"mb-4\">\r\n\t\t\t\t\t{{ msgAlert }}\r\n\t\t\t\t</v-alert>\r\n\t\t\t</v-card>\r\n\t\t\t<v-btn type=\"submit\" class=\"mt-2\">\r\n\t\t\t\tEnvoyer\r\n\t\t\t</v-btn>\r\n\t\t</form>\r\n\t</div>\r\n</template> \r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport axios from 'axios'\r\nexport default {\r\n\tname: \"listeacte\",\r\n\tcomputed: mapState([\r\n\t\t'userInfo',\r\n\t]),\r\n\tdata: () => ({\r\n\t\tmesssage: '',\r\n\t\tkind: '',\r\n\t\treceiverEmail: '',\r\n\t\tidReceiver: '',\r\n\t\tusers: [],\r\n\t\ttypeAlert: '',\r\n\t\tmsgAlert: ''\r\n\t}),\r\n\tmethods: {\r\n\t\tinitializeComponent() {\r\n\t\t\tthis.msgAlert = ''\r\n\t\t\tthis.typeAlert = ''\r\n\t\t},\r\n\t\tasync envoyerMessage() {\r\n\t\t\tthis.initializeComponent()\r\n\t\t\ttry {\r\n\r\n\r\n\r\n\r\n\t\t\t\tconst formData = new FormData()\r\n\t\t\t\tformData.append('email', this.receiverEmail)\r\n\t\t\t\tformData.append('message', this.message)\r\n\t\t\t\tformData.append('writer', this.userInfo.id)\r\n\t\t\t\tformData.append('receiver', this.idReceiver)\r\n\t\t\t\tformData.append('kind', 0)\r\n\t\t\t\tformData.append('created_at', this.getCurrentTime())\r\n\t\t\t\tconsole.log(this.message)\r\n\t\t\t\treturn\r\n\t\t\t\tconst response = await axios.post('messages/create', formData)\r\n\t\t\t\tif (response.data.errorstate == true) {\r\n\t\t\t\t\tthis.typeAlert = 'error'\r\n\t\t\t\t\tthis.msgAlert = \"Veuillez Verifier l'adresse email, (message non envoyé !)\"\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.typeAlert = 'success'\r\n\t\t\t\tthis.msgAlert = \"Message envoyé avec succès\" \r\n\t\t\t\tconsole.log(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetCurrentTime() {\r\n\t\t\tconst dateObj = new Date();\r\n\t\t\tconst currentDate = \":\" + dateObj.getHours() + ':' + dateObj.getMinutes() + ':' + dateObj.getSeconds();\r\n\t\t\treturn currentDate\r\n\t\t}\r\n\r\n},\r\n\r\n\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}