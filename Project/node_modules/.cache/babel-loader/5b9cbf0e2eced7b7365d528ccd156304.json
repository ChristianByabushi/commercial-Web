{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router';\nexport default {\n  name: \"editaccount\",\n  data: () => ({\n    idUser: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    created_at: '',\n    scope: '',\n    msgAlert: '',\n    stateaccount: '',\n    items_stateaccount: [{\n      state: 0,\n      title: 'activé'\n    }, {\n      state: 1,\n      title: 'désactivé'\n    }],\n    items_scope: [{\n      scope: 'agent',\n      title: 'Agent'\n    }, {\n      scope: 'decl',\n      title: 'Déclarant'\n    }]\n  }),\n  methods: {\n    findIdMerchandise() {\n      this.prop_merchandises.forEach(element => {\n        if (element.title == this.title_merchandise) {\n          this.id_merchandise = element.id;\n        }\n      });\n    },\n\n    changetypefonction(type) {\n      this.typeAlert = '';\n      this.msgAlert = '';\n    },\n\n    async editMethod() {\n      this.changetypefonction('');\n\n      if (String(this.password).length < 8 || String(this.newpassword).length < 8) {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Le mot de passe doit contenir au minimum 8 caractères\";\n        return;\n      }\n\n      if (this.scope == '') {\n        this.typeAlert = \"error\";\n        this.msgAlert = \"Veuillez choisir d'abord le type d'utilisateur\";\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append('id', this.idUser);\n        formData.append('firstname', this.firstname);\n        formData.append('lastname', this.lastname);\n        formData.append('password', this.password);\n        formData.append('password_confirm', this.password);\n        formData.append('email', this.email);\n        formData.append('new_email', this.email);\n        formData.append('scope', this.scope);\n        formData.append('stateaccount', this.stateaccount);\n        const response = await axios.post('user/editAccountUser', formData);\n\n        if (response.data.errorstate == true) {\n          this.typeAlert = 'error';\n          this.msgAlert = response.data.error;\n          console.log(response.data.error);\n          return;\n        }\n\n        this.msgAlert = 'Compte modifié avec succés';\n        this.typeAlert = 'info';\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async getUserInfo(id) {\n      let paramId = router.currentRoute.params.id;\n\n      if (paramId != null) {\n        const response = await axios.post('user/getInfoByid/' + paramId);\n        this.idUser = response.data.id;\n        this.firstname = response.data.firstname;\n        this.lastname = response.data.lastname;\n        this.email = response.data.email;\n        this.scope = response.data.scope;\n        this.stateaccount = response.data.stateaccount;\n      }\n    }\n\n  },\n\n  beforeMount() {\n    this.getUserInfo();\n  }\n\n};","map":{"version":3,"mappings":"AAyBA;AACA;AACA;EACAA,mBADA;EAEAC;IACAC,UADA;IAEAC,aAFA;IAGAC,YAHA;IAIAC,SAJA;IAKAC,YALA;IAMAC,cANA;IAOAC,SAPA;IAQAC,YARA;IASAC,gBATA;IAUAC,qBACA;MACAC,QADA;MAEAC;IAFA,CADA,EAKA;MACAD,QADA;MAEAC;IAFA,CALA,CAVA;IAoBAC,cACA;MACAN,cADA;MAEAK;IAFA,CADA,EAKA;MACAL,aADA;MAEAK;IAFA,CALA;EApBA,EAFA;EAiCAE;IACAC;MACA;QACA;UACA;QACA;MACA,CAJA;IAKA,CAPA;;IAQAC;MACA;MACA;IACA,CAXA;;IAYA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACAC;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACA;;QACA;UACA;UACA;UACAC;UACA;QACA;;QACA;QACA;MACA,CApBA,CAoBA;QACAA;MACA;IACA,CA/CA;;IAgDA;MACA;;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IAEA;;EA5DA,CAjCA;;EA+FAC;IACA;EACA;;AAjGA","names":["name","data","idUser","firstname","lastname","email","password","created_at","scope","msgAlert","stateaccount","items_stateaccount","state","title","items_scope","methods","findIdMerchandise","changetypefonction","formData","console","beforeMount"],"sourceRoot":"src/views/admin","sources":["editaccount.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h5>Editer un compte</h5>\r\n\t\t<form @submit.prevent=\"editMethod()\" method=\"post\">\r\n\t\t\t<v-text-field v-model=\"idUser\" label=\"Id\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t<v-text-field v-model=\"firstname\" label=\"Nom\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t<v-text-field v-model=\"lastname\" label=\"Prénom\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t<v-text-field v-model=\"email\" label=\"Adresse email\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t<v-text-field v-model=\"password\" label=\"Mot de passe par defaut\" required :counter=\"255\"> </v-text-field>\r\n\t\t\t<v-select name=\"\" v-model=\"scope\" :items=\"items_scope\" item-text=\"title\" label=\"Type d'utilisateur\"\r\n\t\t\t\titem-value=\"scope\">\r\n\t\t\t</v-select>\r\n\t\t\t<v-select v-model=\"stateaccount\" :items=\"items_stateaccount\" item-text=\"title\" label=\"Etat du compte\"\r\n\t\t\t\titem-value=\"state\">\r\n\t\t\t</v-select>\r\n\t\t\t<v-alert :type=\"typeAlert\" v-if=\"msgAlert\" class=\"mb-4\">\r\n\t\t\t\t{{ msgAlert }}\r\n\t\t\t</v-alert>\r\n\t\t\t<v-btn type=\"submit\" class=\"mr-4 center\">\r\n\t\t\t\tEditer\r\n\t\t\t</v-btn>\r\n\t\t</form>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport router from '@/router';\r\nexport default {\r\n\tname: \"editaccount\",\r\n\tdata: () => ({\r\n\t\tidUser: '',\r\n\t\tfirstname: '',\r\n\t\tlastname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tcreated_at: '',\r\n\t\tscope: '',\r\n\t\tmsgAlert: '',\r\n\t\tstateaccount: '',\r\n\t\titems_stateaccount: [\r\n\t\t\t{\r\n\t\t\t\tstate: 0,\r\n\t\t\t\ttitle: 'activé'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstate: 1,\r\n\t\t\t\ttitle: 'désactivé'\r\n\t\t\t},\r\n\t\t],\r\n\t\titems_scope: [\r\n\t\t\t{\r\n\t\t\t\tscope: 'agent',\r\n\t\t\t\ttitle: 'Agent'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tscope: 'decl',\r\n\t\t\t\ttitle: 'Déclarant'\r\n\t\t\t},\r\n\t\t]\r\n\t}),\r\n\tmethods: {\r\n\t\tfindIdMerchandise() {\r\n\t\t\tthis.prop_merchandises.forEach(element => {\r\n\t\t\t\tif (element.title == this.title_merchandise) {\r\n\t\t\t\t\tthis.id_merchandise = element.id\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tchangetypefonction(type) {\r\n\t\t\tthis.typeAlert = ''\r\n\t\t\tthis.msgAlert = ''\r\n\t\t},\r\n\t\tasync editMethod() {\r\n\t\t\tthis.changetypefonction('')\r\n\t\t\tif (((String(this.password).length) < 8) || ((String(this.newpassword).length) < 8)) {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Le mot de passe doit contenir au minimum 8 caractères\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (this.scope == '') {\r\n\t\t\t\tthis.typeAlert = \"error\"\r\n\t\t\t\tthis.msgAlert = \"Veuillez choisir d'abord le type d'utilisateur\"\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst formData = new FormData()\r\n\t\t\t\tformData.append('id', this.idUser)\r\n\t\t\t\tformData.append('firstname', this.firstname)\r\n\t\t\t\tformData.append('lastname', this.lastname)\r\n\t\t\t\tformData.append('password', this.password)\r\n\t\t\t\tformData.append('password_confirm', this.password)\r\n\t\t\t\tformData.append('email', this.email)\r\n\t\t\t\tformData.append('new_email', this.email)\r\n\t\t\t\tformData.append('scope', this.scope)\r\n\t\t\t\tformData.append('stateaccount', this.stateaccount)\r\n\t\t\t\tconst response = await axios.post('user/editAccountUser', formData)\r\n\t\t\t\tif ((response.data.errorstate) == true) {\r\n\t\t\t\t\tthis.typeAlert = 'error'\r\n\t\t\t\t\tthis.msgAlert = response.data.error\r\n\t\t\t\t\tconsole.log(response.data.error)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.msgAlert = 'Compte modifié avec succés'\r\n\t\t\t\tthis.typeAlert = 'info'\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getUserInfo(id) {\r\n\t\t\tlet paramId = router.currentRoute.params.id\r\n\t\t\tif (paramId != null) {\r\n\t\t\t\tconst response = await axios.post('user/getInfoByid/' + paramId)\r\n\t\t\t\tthis.idUser = response.data.id\r\n\t\t\t\tthis.firstname = response.data.firstname\r\n\t\t\t\tthis.lastname = response.data.lastname\r\n\t\t\t\tthis.email = response.data.email\r\n\t\t\t\tthis.scope = response.data.scope\r\n\t\t\t\tthis.stateaccount = response.data.stateaccount\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t},\r\n\tbeforeMount() {\r\n\t\tthis.getUserInfo()\r\n\t},\r\n}\r\n</script>\r\n<style scoped>\r\nh5 {\r\n\tcolor: rgb(70, 64, 64);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}